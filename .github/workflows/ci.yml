name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # - name: Install Winget
    #   shell: pwsh
    #   run: |
    #     if (-not (Get-Command winget -ErrorAction SilentlyContinue)) {
    #         Write-Host "winget not found, installing winget."
    #         $wingetInstaller = "$env:TEMP\winget.appxbundle"
    #         Invoke-WebRequest -Uri "https://aka.ms/getwinget" -OutFile $wingetInstaller
    #         Add-AppxPackage -Path $wingetInstaller
    #         # Refresh environment variables by appending typical install path
    #         $env:PATH += ";C:\Program Files\WindowsApps"
    #     } else {
    #         Write-Host "winget is already installed."
    #     }

    - name: Install Pester
      run: Install-Module -Name Pester -Force -SkipPublisherCheck

    - name: Run Pester tests
      run: |
        $config = New-PesterConfiguration
        $config.Run.Path = 'tests'
        $config.TestResult.Enabled = $true
        $config.CodeCoverage.Enabled = $true
        Invoke-Pester -Configuration $config
      shell: pwsh
      continue-on-error: true

    - name: Publish test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ./testResults.xml

    - name: Upload repository content
      uses: actions/upload-artifact@v4
      with:
        name: repo-content
        path: .
        retention-days: 1

  publish:
    # Run only on commit on main not on PR
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: windows-latest
    needs: build
    steps:
    - name: Download repository content
      uses: actions/download-artifact@v4
      with:
        name: repo-content
        path: .
      
    - name: Publish to PowerShell Gallery
      if: success()
      shell: pwsh
      env:
        PSGalleryApiKey: ${{ secrets.PSGALLERY_API_KEY }}
      run: |
        .\Build.ps1 -Package -Analyze -patchVersion "${{ github.run_number }}${{ github.run_attempt }}" -NuGetApiKey $env:PSGalleryApiKey